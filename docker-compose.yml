version: '3.8'

# Services
services:

  # Nginx Service
  nginx:
    build: ./nginx
    container_name: nginx
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/certs:/etc/nginx/certs
      - /static:/static
      - ./src/:/var/www/qu/aqg/
    networks:
      - dbnet
    depends_on:
      - django
  # MySQL Service
  mysql:
    image: mysql:8
    command: [--default-authentication-plugin=mysql_native_password]
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: 'limu828!rootmysql'
      MYSQL_DATABASE: 'RT_AQG'
      MYSQL_USER: 'bryan'
      MYSQL_PASSWORD: 'limu828!'
    volumes:
      - ./mysql/my.cnf:/etc/mysql/conf.d/my.cnf
      - ./mysql/init:/docker-entrypoint-initdb.d
      - mysqldata:/var/lib/mysql
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u root --password=$$MYSQL_ROOT_PASSWORD
      interval: 5s
      retries: 5
    ports:
      - 3306:3306
    networks:
      - dbnet
  django:
    build: ./retaqg-backend
    command: bash -c "python manage.py collectstatic --no-input && yes | python manage.py makemigrations --merge && python manage.py migrate && gunicorn aqg_api.wsgi:application --bind 0.0.0.0:443 --log-level=debug"
    container_name: django
    env_file:
      - ./retaqg-backend/aqg_api/aqg_api/.env
    volumes:
      - ./weights:/code/weights
      - ./nginx/certs:/etc/certs
      - /static:/code/static
    expose:
      - "443"
    links:
      - mysql
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - dbnet

# Volumes
volumes:

  mysqldata:

networks:
  dbnet:
